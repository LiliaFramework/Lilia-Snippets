{
    "CLASS:OnCanBe": {
        "prefix": "CLASS:OnCanBe",
        "body": [
            "function CLASS:OnCanBe(client)\n\t$0\nend"
        ],
        "description": "Whether or not a player can switch to this class."
    }, 

    "CLASS:OnLeave": {
        "prefix": "CLASS:OnLeave",
        "body": [
            "function CLASS:OnLeave(client)\n\t$0\nend"
        ],
        "description": "Called when a character has left this class and has joined a different one."
    },

    "CLASS:OnSet": {
        "prefix": "CLASS:OnSet",
        "body": [
            "function CLASS:OnSet(client)\n\t$0\nend"
        ],
        "description": "Called when a character has joined this class."
    },
    
    "CLASS:OnSpawn": {
        "prefix": "CLASS:OnSpawn",
        "body": [
            "function CLASS:OnSpawn(client)\n\t$0\nend"
        ],
        "description": "Called when a character in this class has spawned in the world."
    },

    "FACTION:GetDefaultName": {
        "prefix": "FACTION:GetDefaultName",
        "body": [
            "function FACTION:GetDefaultName(client)\n\t$0\nend"
        ],
        "description": "Called when the default name for a character needs to be retrieved (i.e upon initial creation)."
    },

    "FACTION:GetDefaultDesc": {
        "prefix": "FACTION:GetDefaultDesc",
        "body": [
            "function FACTION:GetDefaultDesc(client)\n\t$0\nend"
        ],
        "description": "Called when the default description for a character needs to be retrieved. This function allows factions to define custom default descriptions for characters."
    },

    "FACTION:OnCharCreated": {
        "prefix": "FACTION:OnCharCreated",
        "body": [
            "function FACTION:OnCharCreated(client, character)\n\t$0\nend"
        ],
        "description": "Called when a character has been initially created and assigned to this faction."
    },

    "FACTION:OnSpawn": {
        "prefix": "FACTION:OnSpawn",
        "body": [
            "function FACTION:OnSpawn(client)\n\t$0\nend"
        ],
        "description": "Called when a character in this faction has spawned in the world."
    },

    "FACTION:OnTransferred": {
        "prefix": "FACTION:OnTransferred",
        "body": [
            "function FACTION:OnTransferred(character)\n\t$0\nend"
        ],
        "description": "Called when a player's character has been transferred to this faction."
    },

	"MODULE:CanPlayerDropItem": {
		"prefix": "MODULE:CanPlayerDropItem",
		"body": [
			"function MODULE:CanPlayerDropItem(client, item)\n\t$0\nend"
		],
		"description": "Whether or not a player can drop an item."
	},
	"MODULE:CanPlayerEquipItem": {
		"prefix": "MODULE:CanPlayerEquipItem",
		"body": [
			"function MODULE:CanPlayerEquipItem(client, item)\n\t$0\nend"
		],
		"description": "Whether or not a player can equip an item."
	},
	"MODULE:CanPlayerInteractItem": {
		"prefix": "MODULE:CanPlayerInteractItem",
		"body": [
			"function MODULE:CanPlayerInteractItem(client, item, action)\n\t$0\nend"
		],
		"description": "Whether or not a player can interact with an item."
	},
	"MODULE:CanPlayerPickupItem": {
		"prefix": "MODULE:CanPlayerPickupItem",
		"body": [
			"function MODULE:CanPlayerPickupItem(client, item)\n\t$0\nend"
		],
		"description": "Whether or not a player can pick up an item."
	},
	"MODULE:CanPlayerUnequipItem": {
		"prefix": "MODULE:CanPlayerUnequipItem",
		"body": [
			"function MODULE:CanPlayerUnequipItem(client, item)\n\t$0\nend"
		],
		"description": "Whether or not a player can unequip an item."
	},
	"MODULE:InitializedConfig": {
		"prefix": "MODULE:InitializedConfig",
		"body": [
			"function MODULE:InitializedConfig()\n\t$0\nend"
		],
		"description": "Called when the config has been initialized."
	},
	"MODULE:InitializedModules": {
		"prefix": "MODULE:InitializedModules",
		"body": [
			"function MODULE:InitializedModules()\n\t$0\nend"
		],
		"description": "Called when the modules have been initialized."
	},
	"MODULE:InitializedSchema": {
		"prefix": "MODULE:InitializedSchema",
		"body": [
			"function MODULE:InitializedSchema()\n\t$0\nend"
		],
		"description": "Called when the schema has been initialized."
	},
	"MODULE:LoadData": {
		"prefix": "MODULE:LoadData",
		"body": [
			"function MODULE:LoadData()\n\t$0\nend"
		],
		"description": "Called when the data has been loaded."
	},
	"MODULE:LoadFonts": {
		"prefix": "MODULE:LoadFonts",
		"body": [
			"function MODULE:LoadFonts(font, genericFont)\n\t$0\nend"
		],
		"description": "Called when the fonts have been loaded."
	},
	"MODULE:ModuleLoaded": {
		"prefix": "MODULE:ModuleLoaded",
		"body": [
			"function MODULE:ModuleLoaded()\n\t$0\nend"
		],
		"description": "Called when the module has been loaded."
	},
	"MODULE:OnItemSpawned": {
		"prefix": "MODULE:OnItemSpawned",
		"body": [
			"function MODULE:OnItemSpawned(entity)\n\t$0\nend"
		],
		"description": "Called whenever an item entity has spawned in the world. You can access the entity's item table with entity:getItemTable()"
	},
	"MODULE:OnPickupMoney":{
		"prefix": "MODULE:OnPickupMoney",
		"body": [
			"function MODULE:OnPickupMoney(client, moneyEntity)\n\t$0\nend"
		],
		"description": "Called when a player picks up money. This function is called when a player picks up money from the groun"
	},
	"MODULE:PlayerModelChanged": {
		"prefix": "MODULE:PlayerModelChanged",
		"body": [
			"function MODULE:PlayerModelChanged(client, model)\n\t$0\nend"
		],
		"description": "Called when a player's model has changed."
	},
	"MODULE:PostLoadData": {
		"prefix": "MODULE:PostLoadData",
		"body": [
			"function MODULE:PostLoadData()\n\t$0\nend"
		],
		"description": "Called after the data has been loaded."
	},
	"MODULE:SaveData": {
		"prefix": "MODULE:SaveData",
		"body": [
			"function MODULE:SaveData()\n\t$0\nend"
		],
		"description": "Called when the data has been saved."
	},
	"MODULE:ScreenResolutionChanged": {
		"prefix": "MODULE:ScreenResolutionChanged",
		"body": [
			"function MODULE:ScreenResolutionChanged(oldWidth, oldHeight, width, height)\n\t$0\nend"
		],
		"description": "Called when the screen resolution has changed."
	},
	"MODULE:ShouldClientDrown": {
		"prefix": "MODULE:ShouldClientDrown",
		"body": [
			"function MODULE:ShouldClientDrown(client)\n\t$0\nend"
		],
		"description": "Whether or not a player should drown."
	},
	"MODULE:ShouldDataBeSaved": {
		"prefix": "MODULE:ShouldDataBeSaved",
		"body": [
			"function MODULE:ShouldDataBeSaved()\n\t$0\nend"
		],
		"description": "Whether or not the data should be saved."
	}
}